@model CNMWebApp.Models.SolicitudViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Solicitud de Vacaciones</h2>

<h4>Detalle</h4>
<hr />


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-6">
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.SolicitudId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.SolicitudId, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UsuarioId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.UsuarioId, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PrimerApellido, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.PrimerApellido, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SegundoApellido, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.SegundoApellido, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FechaIngreso, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.FechaIngreso, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CantidadAnnosLaborados, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.CantidadAnnosLaborados, new { htmlAttributes = new { @class = "form-control", @readonly = "True" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SaldoDiasDisponibles, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.SaldoDiasDisponibles, new { htmlAttributes = new { @class = "form-control", @readonly = "True" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CantidadDiasSolicitados, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.CantidadDiasSolicitados, new { htmlAttributes = new { @class = "form-control", @readonly = "True" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Comentario, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Comentario, new { htmlAttributes = new { @class = "form-control", @readonly = "True" } })
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.Label("Días Solicitados", htmlAttributes: new { @class = "control-label" })
                        <div class="selected-dates">
                            <input style="display: none;" id="selected-days" type="text" value="" readonly />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


<div>
    @Html.ActionLink("Regresar", "Index", "Solicitud")
</div>

@section scripts
{
    <script>
        var diasPorSolicitud = @Html.Raw(Json.Encode(Model.DiasPorSolicitud));
        diasPorSolicitud = diasPorSolicitud.map(x => x.Fecha);

        $('.selected-dates').datepicker({
            format: 'yyyy/mm/dd',
            todayHighlight: true,
            multidate: true,
            beforeShowDay: function () {
                return false;
            }
        });

        $('.selected-dates').datepicker('setDates', diasPorSolicitud);
    </script>
}