@model CNMWebApp.Models.SolicitudViewModel

@{
    ViewBag.Title = "Crear";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Solicitar Vacaciones</h2>
<hr />


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-6">
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                        @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PrimerApellido, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.PrimerApellido, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                        @Html.ValidationMessageFor(model => model.PrimerApellido, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SegundoApellido, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.SegundoApellido, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                        @Html.ValidationMessageFor(model => model.SegundoApellido, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FechaIngreso, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.FechaIngreso, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                        @Html.ValidationMessageFor(model => model.FechaIngreso, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CantidadAnnosLaborados, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.CantidadAnnosLaborados, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                        @Html.ValidationMessageFor(model => model.CantidadAnnosLaborados, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SaldoDiasDisponibles, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.SaldoDiasDisponibles, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                        @Html.ValidationMessageFor(model => model.SaldoDiasDisponibles, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div hidden class="form-group">
                    @Html.LabelFor(model => model.Dias, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <div class='input-group date datepicker-vacaciones'>
                            @Html.EditorFor(model => model.Dias, new { htmlAttributes = new { @type = "text", @class = "form-control" } })
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-th"></span>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(model => model.Dias, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CantidadDiasSolicitados, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.CantidadDiasSolicitados, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                        @Html.ValidationMessageFor(model => model.CantidadDiasSolicitados, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Dias, htmlAttributes: new { @class = "control-label" })
                        <div class="select-dates">
                            <input style="display: none;" id="selected-days" type="text" value="" readonly />
                        </div>
                        @Html.ValidationMessageFor(model => model.Dias, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Comentario, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Comentario, new { htmlAttributes = new { @class = "form-control", @cols = "1000" } })
                            @Html.ValidationMessageFor(model => model.Comentario, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-6 col-md-offset-3">
                    <input type="submit" value="Solicitar" class="btn btn-default btn-block" />
                </div>
            </div>
        </div>
    </div>
}


<div>
    @Html.ActionLink("Regresar", "Index", "Home")
</div>


@section scripts
{
    <script>
        var selectedDates = [];
            $('.select-dates').datepicker({
                format: 'yyyy/mm/dd',
                todayHighlight: true,
                multidate: true,
                linkField: 'Dias',
                linkFormat: 'yyyy/mm/dd',
                sideBySide: true,
                toolbarPlacement: 'bottom',
                showClear: true,
                startDate: new Date()
            }).datepicker();

            $('.select-dates').datepicker().on('changeDate', function (e) {
                var saldoDias = $('#SaldoDiasDisponibles').val();

                saldoDias = saldoDias.replace(/,/g, '.');

                if (e.dates.length <= saldoDias) {
                    selectedDates = e.dates;
                    var dias = $('#selected-days').val();
                    $('#Dias').val(dias);

                    $('#CantidadDiasSolicitados').val(selectedDates.length);
                } else {
                    if (selectedDates.length > 0) {
                        $('.select-dates').datepicker("setDates", selectedDates);
                    } else {
                        $('.select-dates').datepicker("setDates", '');
                    }
                }
        });

        var diasSeleccionados = $('#Dias').val();
        var array = diasSeleccionados.split(",");
        $('.select-dates').datepicker('setDates', array);
    </script>
}